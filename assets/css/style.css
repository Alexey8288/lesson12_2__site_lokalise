/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  -webkit-box-sizing:content-box;
          box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  -webkit-text-decoration:underline dotted;
          text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  -webkit-box-sizing:border-box;
          box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  -webkit-box-sizing:border-box;
          box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"Graphik LCG";
  src:url("../fonts/GraphikLCG-Regular.woff2") format("woff2"), url("../fonts/GraphikLCG-Regular.woff") format("woff");
  font-weight:normal;
  font-style:normal;
  font-display:swap;
}
@font-face{
  font-family:"Graphik LCG";
  src:url("../fonts/GraphikLCG-Semibold.woff2") format("woff2"), url("../fonts/GraphikLCG-Semibold.woff") format("woff");
  font-weight:600;
  font-style:normal;
  font-display:swap;
}
*,
*::before,
*::after{
  -webkit-box-sizing:border-box;
          box-sizing:border-box;
}

html{
  font-size:16px;
  overflow-x:hidden;
}

body{
  font-family:"Graphik LCG", sans-serif;
  font-size:15px;
  font-weight:normal;
  color:#000000;
}

a{
  text-decoration:none;
  color:#000000;
}

.container{
  max-width:1330px;
  padding-left:20px;
  padding-right:20px;
  margin-left:auto;
  margin-right:auto;
}

.btn{
  display:block;
  padding:0.5em 1em;
  font-weight:600;
  font-size:16px;
  text-align:center;
  border-width:1px;
  border-style:solid;
  border-radius:0;
  cursor:pointer;
}

.btn--light{
  border-color:#808080;
  background-color:#ffffff;
}

.btn--light:hover{
  -webkit-box-shadow:0 0 7px #ff6336;
          box-shadow:0 0 7px #ff6336;
}

.btn--accent{
  background-color:#ff6336;
  border-color:#ff6336;
  color:#ffffff;
}

.btn--accent:hover{
  -webkit-box-shadow:0 0 7px #ff6336;
          box-shadow:0 0 7px #ff6336;
}

.btn--sm{
  min-width:120px;
  height:45px;
}

.header{
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-orient:vertical;
  -webkit-box-direction:normal;
      -ms-flex-direction:column;
          flex-direction:column;
  min-height:100vh;
  background-color:#ffffff;
}

.header-menu{
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -ms-flex-wrap:wrap;
      flex-wrap:wrap;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
  padding-top:20px;
  padding-bottom:20px;
  gap:20px;
  position:relative;
}
.header-menu::after{
  content:"";
  position:absolute;
  bottom:0;
  left:50%;
  width:100vw;
  height:1px;
  background-color:#808080;
  margin-left:-50vw;
}
.header-menu__logo{
  padding-right:10px;
}
.header-menu__actions{
  margin-left:auto;
}

.header-navbar__list{
  list-style:none;
  margin:0;
  padding:0;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -ms-flex-wrap:wrap;
      flex-wrap:wrap;
  -webkit-column-gap:20px;
     -moz-column-gap:20px;
          column-gap:20px;
}
.header-navbar__link{
  display:block;
  padding:0.5em 20px;
}
.header-navbar__btn{
  width:30px;
  height:22.5px;
  position:relative;
  margin:25px auto;
  -webkit-transform:rotate(0deg);
      -ms-transform:rotate(0deg);
          transform:rotate(0deg);
  -webkit-transition:0.5s ease-in-out;
  -o-transition:0.5s ease-in-out;
  transition:0.5s ease-in-out;
  cursor:pointer;
}
.header-navbar__btn span{
  display:block;
  position:absolute;
  height:5px;
  width:100%;
  background:#ff6336;
  border-radius:3px;
  opacity:1;
  left:0;
  -webkit-transform:rotate(0deg);
      -ms-transform:rotate(0deg);
          transform:rotate(0deg);
  -webkit-transition:0.25s ease-in-out;
  -o-transition:0.25s ease-in-out;
  transition:0.25s ease-in-out;
}
.header-navbar__btn span:nth-child(1){
  top:0px;
  background:#a4a14a;
}
.header-navbar__btn span:nth-child(2){
  top:9px;
  background:#ffc500;
}
.header-navbar__btn span:nth-child(3){
  top:18px;
  background:#ff6336;
}
.header-navbar__btn.open span:nth-child(1){
  top:9px;
  -webkit-transform:rotate(135deg);
      -ms-transform:rotate(135deg);
          transform:rotate(135deg);
}
.header-navbar__btn.open span:nth-child(2){
  opacity:0;
  left:-30px;
}
.header-navbar__btn.open span:nth-child(3){
  top:9px;
  -webkit-transform:rotate(-135deg);
      -ms-transform:rotate(-135deg);
          transform:rotate(-135deg);
}

.header-actions{
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  gap:10px;
}

.header-content{
  display:grid;
  row-gap:20px;
  padding-top:40px;
  padding-bottom:40px;
  margin-top:auto;
  margin-bottom:auto;
}
.header-content__title{
  grid-area:ttl;
  font-weight:600;
  line-height:70px;
  margin:0;
}
.header-content__description{
  grid-area:dsc;
  line-height:35px;
}
.header-content__actions{
  grid-area:act;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  gap:10px;
}
.header-content__notes{
  grid-area:nts;
  font-size:15px;
  line-height:25px;
}
.header-content__pictures{
  grid-area:pic;
  display:-webkit-box;
  display:-ms-flexbox;
  display:flex;
  -webkit-box-align:center;
      -ms-flex-align:center;
          align-items:center;
  -webkit-box-pack:center;
      -ms-flex-pack:center;
          justify-content:center;
}
@media (min-width: 576px){
  .btn--md{
    min-width:160px;
    height:60px;
  }
  .header-content__title{
    font-size:65px;
  }
  .header-content__description{
    font-size:25px;
  }
}
@media (min-width: 768px){
  .header-navbar__btn{
    display:none;
  }
}
@media (min-width: 992px){
  .header-content__image{
    width:100%;
  }
}
@media (min-width: 1200px){
  .header-content{
    grid-template-areas:"ttl pic" "dsc pic" "act pic" "nts pic";
    grid-template-columns:580px 1fr;
  }
  .header-content__description{
    padding-right:70px;
  }
}
@media (max-width: 1199.8px) and (min-width: 992px){
  .header-content{
    grid-template-areas:"ttl pic" "dsc pic" "act pic" "nts pic";
    grid-template-columns:1fr 1fr;
  }
  .header-content__description{
    padding-right:20px;
  }
}
@media (max-width: 991.8px){
  .header-content{
    grid-template-areas:"ttl" "dsc" "pic" "act" "nts";
    text-align:center;
  }
  .header-content__actions{
    -webkit-box-pack:center;
        -ms-flex-pack:center;
            justify-content:center;
  }
}
@media (max-width: 991.8px) and (min-width: 768px){
  .header-content__image{
    width:60%;
  }
}
@media (max-width: 767.8px){
  .header-menu{
    -webkit-box-pack:center;
        -ms-flex-pack:center;
            justify-content:center;
  }
  .header-navbar__list{
    display:none;
    position:absolute;
    top:100%;
    left:0;
    right:0;
    padding:20px 10px;
    background-color:#ff6336;
    -webkit-box-shadow:0 5px 10px #808080;
            box-shadow:0 5px 10px #808080;
  }
  .header-actions{
    width:100%;
    -webkit-box-pack:center;
        -ms-flex-pack:center;
            justify-content:center;
  }
  .header-content__image{
    width:80%;
  }
}
@media (max-width: 575.8px){
  .btn--md{
    min-width:140px;
    height:50px;
  }
  .header-content__title{
    font-size:45px;
  }
  .header-content__description{
    font-size:20px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */